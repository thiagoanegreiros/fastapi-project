name: CI

on:
  push:
    branches:
      - main
  pull_request:

env:
  PYTHONPATH: ${{ github.workspace }}

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      PYTHONPATH: ${{ github.workspace }}
      JWT_SECRET_KEY: ${{ vars.JWT_SECRET_KEY }}
      FRONT_REDIRECT_URI: ${{ vars.FRONT_REDIRECT_URI }}
      MOVIE_API_KEY: ${{ vars.MOVIE_API_KEY }}
      GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
      GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
      REDIRECT_URI: ${{ vars.REDIRECT_URI }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install uv (Python dependency manager)
        run: |
          curl -Ls https://astral.sh/uv/install.sh | bash
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Sync dependencies with uv
        run: uv sync

      - name: Run pre-push checks
        run: ./scripts/pre_push_check.sh

      - name: Run tests with coverage
        run: uv run pytest --cov --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Download OWASP Dependency-Check
        run: |
          curl -L -o dependency-check.zip https://github.com/jeremylong/DependencyCheck/releases/download/v12.1.0/dependency-check-12.1.0-release.zip
          unzip dependency-check.zip

      - name: Run OWASP Dependency-Check
        run: |
          chmod +x dependency-check/bin/dependency-check
          ./dependency-check/bin/dependency-check \
            --project "Python App Audit" \
            --scan . \
            --format "HTML" \
            --failOnCVSS 7.0 \
            --out dependency-check-report

      - name: Upload Dependency-Check Report
        uses: actions/upload-artifact@v4
        with:
          name: dependency-check-report
          path: dependency-check-report
